services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_web
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - mailpit
    command: python manage.py runserver 0.0.0.0:8000
    restart: unless-stopped  # Asegura que el contenedor se reinicie si falla

  db:
    image: postgres:16
    container_name: postgres_db
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    volumes:
      - ./data:/data
    ports:
      - "8025:8025" # Interfaz web
      - "1025:1025" # SMTP de prueba
    env_file:
      - .env
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A ArenaGG worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
    env_file:
      - .env

  celery-beat:
    build: .
    command: celery -A ArenaGG beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
    env_file:
      - .env

volumes:
  postgres_data:
